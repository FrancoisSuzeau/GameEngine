# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build debug on push

on:
  push:
    branches:
      - feature/**
      - bugfix/**
  #Can be triggered manually
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: "Squeamish.sln"
  BRANCH_NAME: "${{ github.ref }}"
  API_URL: "https://api.github.com/repos/${{ github.repository }}/issues"

permissions:
  contents: read

jobs:
  build:
    runs-on: [Windows, self-hosted]
    strategy:
      fail-fast: false
      matrix:
        build-configuration: [Debug]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: "${{ github.repository }}"
        submodules: true
        lfs: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
        vs-prerelease: true
        vs-version: '17.8.0'

    # - name: Build debug
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   run: msbuild ${{env.SOLUTION_FILE_PATH}}
    - name: Get Branch Name
      shell: powershell
      run: |
        echo "${{env.BRANCH_NAME}}"
        echo "${{env.API_URL}}"

    - name: Get Issue URL
      shell: powershell
      id: get_issue_url
      run: |
        $ISSUE_URL=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github.v3+json" \
                    "${API_URL}?labels=branch:${BRANCH_NAME}" \
                    | jq -r '.[0].html_url')